// Generated by CoffeeScript 1.4.0
(function() {
  var $, StockBasePage,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $ = Spine.$;

  StockBasePage = (function(_super) {

    __extends(StockBasePage, _super);

    StockBasePage.prototype.tmplId = 'pageTmpl';

    StockBasePage.prototype.elements = {
      'div[data-role=header] form input[type=text]': 'searchText'
    };

    StockBasePage.prototype.events = {
      'submit div[data-role=header] form': 'deFetchStock',
      'focus div[data-role=header] form input[type=text]': 'deClearSearch',
      'click div[data-role=header] a.brand': 'deGoHome'
    };

    function StockBasePage() {
      this.updateQuickBar = __bind(this.updateQuickBar, this);
      this.meSettingRefresh = __bind(this.meSettingRefresh, this);
      this.searchTypeAhead = __bind(this.searchTypeAhead, this);      StockBasePage.__super__.constructor.apply(this, arguments);
      Stock.FavList.bind("refresh", this.meSettingRefresh);
      Stock.FavList.bind("update", this.updateQuickBar);
      Stock.FavList.fetch();
      this.searchText.typeahead({
        source: this.searchTypeAhead,
        matcher: function() {
          return true;
        }
      });
    }

    StockBasePage.prototype.searchTypeAhead = function(val, func) {
      var item, list, _i, _len, _results;
      list = Stock.StockDict.query(val);
      _results = [];
      for (_i = 0, _len = list.length; _i < _len; _i++) {
        item = list[_i];
        _results.push(item.join(","));
      }
      return _results;
    };

    StockBasePage.prototype.meSettingRefresh = function() {
      var item, _i, _len, _ref;
      if (Stock.FavList.count() === 0) {
        _ref = Stock.FavList["default"];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          item = _ref[_i];
          Stock.FavList.create(item);
        }
      }
      return this.updateQuickBar();
    };

    StockBasePage.prototype.updateQuickBar = function() {
      var data, stock, _i, _len, _ref,
        _this = this;
      this.clearQuickBar();
      _ref = Stock.FavList.all();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        stock = _ref[_i];
        stock = stock.attributes();
        data = {
          name: stock.stock,
          text: stock.firstLetter
        };
        this.appendQuickBar(data);
      }
      $("a", this.quickBar).click(function(e) {
        return _this.deQuickBarClick(e);
      });
      return $("a", this.quickBar).dblclick(function(e) {
        stock = $(e.target).attr("name");
        return Stock.Util.openStockInputModal(_this, function(value) {
          var record;
          record = Stock.FavList.findByAttribute("stock", stock);
          record.stock = value.slice(0, 6);
          record.firstLetter = value.slice(7, 9);
          return record.save();
        });
      });
    };

    StockBasePage.prototype.deClearSearch = function(e) {
      return $(e.target).val("");
    };

    return StockBasePage;

  })(Stock.Page);

  window.Stock["StockBasePage"] = StockBasePage;

}).call(this);
