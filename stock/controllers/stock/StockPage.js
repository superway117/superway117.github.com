// Generated by CoffeeScript 1.4.0
(function() {
  var $, StockPage,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __slice = [].slice;

  $ = Spine.$;

  StockPage = (function(_super) {

    __extends(StockPage, _super);

    StockPage.prototype.mainMenuItem = {
      name: "stock",
      text: "个股"
    };

    StockPage.prototype.pageMenuID = "stockPageMenuID";

    StockPage.prototype.pageMenuGroups = [
      {
        menuGroupID: "stockRealTimeGroupID",
        title: "实时行情"
      }
    ];

    StockPage.prototype.cacheKey = "quote";

    StockPage.prototype.cacheExpiredTime = 60000;

    StockPage.prototype.stockID = "002142";

    StockPage.prototype.refreshTimer = null;

    StockPage.prototype.refreshTimeOut = 60000;

    StockPage.prototype.events = {
      'click .form-inline button.stock-add-btn': 'deOpenAddStockModal',
      'click #addTagBtn': 'deAddTag',
      'click #addStockBtn': 'deAddStock'
    };

    StockPage.prototype.elements = {
      '.modal-body select': 'tagSelects',
      '.modal-body input[type=text]': 'newTagText',
      '.modal-body form': 'addStockForm'
    };

    StockPage.prototype["default"] = "quote";

    StockPage.prototype.controllers = {
      quote: App.QuotePanel,
      deal: App.DealPanel,
      historydeal: App.HistoryDealPanel,
      historymoney: App.HistoryMoneyPanel
    };

    function StockPage() {
      this.fetchData = __bind(this.fetchData, this);

      this.render = __bind(this.render, this);

      this.fetchFinished = __bind(this.fetchFinished, this);

      var _this = this;
      StockPage.__super__.constructor.apply(this, arguments);
      this.gstock = new App.GoogStock;
      this.gstock.bind('fetchFinished', this.fetchFinished);
      this.bind("refresh", this.fetchData);
      this.registerPageEvent("query", function(stockID) {
        _this.setStock(stockID);
        _this.slientActive(_this.quote);
        return true;
      });
      this.registerPageEvent("compare", function(compares) {
        if (!compares || compares.length < 1) {
          return false;
        }
        _this.slientActive(_this.quote);
        _this.setStock(compares.pop());
        _this.quote.setCompareText(compares);
        return true;
      });
    }

    StockPage.prototype.loadFromTemplate = function() {
      StockPage.__super__.loadFromTemplate.apply(this, arguments);
      return this.append(window.Tmpls.stockAddStockModal());
    };

    StockPage.prototype.fetchFinished = function(result) {
      var data;
      if (result.status === "succ") {
        data = result.list[0];
        Phoniex.Cache.set(this.cacheKey, data, this.cacheExpiredTime);
        return this.render();
      }
    };

    StockPage.prototype.render = function(data) {
      if (data == null) {
        data = Phoniex.Cache.get(this.cacheKey);
      }
      data["color"] = data.cp.charAt(0) === "-" ? "#468847" : "#FF0000";
      return this.tophalf.html(window.Tmpls.stockPageTophalf(data));
    };

    StockPage.prototype.fetchData = function() {
      var args, data;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      if (data = Phoniex.Cache.get(this.cacheKey)) {
        return this.render();
      } else {
        return this.gstock.fetchStock(this.stockID);
      }
    };

    StockPage.prototype.activate = function() {
      StockPage.__super__.activate.apply(this, arguments);
      return this.startRefreshTimer();
    };

    StockPage.prototype.deactivate = function() {
      StockPage.__super__.deactivate.apply(this, arguments);
      return this.clearRefreshTimer();
    };

    StockPage.prototype.startActiveTimer = function() {
      if (this.isActive()) {
        return this.delay(this.startRefreshTimer, 500);
      }
    };

    StockPage.prototype.startRefreshTimer = function() {
      if (this.isActive()) {
        if (!this.refreshTimer) {
          console.log("StockPage startRefreshTimer");
          this.refreshTimer = this.delay(this.refreshTimerCB, this.refreshTimeOut);
          return this.refresh();
        }
      }
    };

    StockPage.prototype.refreshTimerCB = function() {
      if (this.isActive()) {
        console.log("StockPage refreshTimerCB");
        this.refreshTimer = this.delay(this.refreshTimerCB, this.refreshTimeOut);
        return this.refresh();
      }
    };

    StockPage.prototype.clearRefreshTimer = function() {
      if (this.refreshTimer) {
        clearTimeout(this.refreshTimer);
      }
      return this.refreshTimer = null;
    };

    StockPage.prototype.updateTagSelects = function() {
      var data, record, records, _i, _len, _results;
      App.TagList.fetch();
      if (App.TagList.count() === 0) {
        App.TagList.create(App.TagList["default"]);
      }
      records = App.TagList.all();
      this.tagSelects.empty();
      _results = [];
      for (_i = 0, _len = records.length; _i < _len; _i++) {
        record = records[_i];
        data = {
          name: record.name,
          text: record.name
        };
        _results.push(this.tagSelects.append(window.PhoniexTmpls.selectMenuItem(data)));
      }
      return _results;
    };

    StockPage.prototype.appendTagSelect = function(name) {
      var data;
      if (App.TagList.findByAttribute("name", name)) {
        return Phoniex.Util.openAlert(this.addStockForm, {
          type: "alert-error",
          body: "标签已经存在"
        });
      } else {
        data = {
          name: name,
          text: name
        };
        App.TagList.create({
          name: name
        });
        this.tagSelects.prepend(window.PhoniexTmpls.selectMenuItem(data));
        return this.tagSelects.get(0).selectedIndex = 0;
      }
    };

    StockPage.prototype.deOpenAddStockModal = function(e) {
      e.preventDefault();
      this.updateTagSelects();
      $('#addStockModal').modal();
      return false;
    };

    StockPage.prototype.deAddTag = function(e) {
      var name;
      name = this.newTagText.val();
      if (!name) {
        Phoniex.Util.openAlert(this.addStockForm, {
          type: "alert-error",
          body: "名字不能为空"
        });
      } else {
        this.appendTagSelect(name);
      }
      e.preventDefault();
      return false;
    };

    StockPage.prototype.deAddStock = function(e) {
      var item, tag,
        _this = this;
      tag = this.tagSelects.val();
      e.preventDefault();
      item = App.StockList.select(function(item) {
        return item["stock"] === _this.stockID && item["tag"] === tag;
      });
      if (item.length > 0) {
        Phoniex.Util.openAlert(this.addStockForm, {
          type: "alert-error",
          body: "股票已经存在"
        });
      } else {
        App.StockList.create({
          stock: this.stockID,
          tag: tag
        });
        $('#addStockModal').modal('hide');
      }
      return false;
    };

    StockPage.prototype.clearAllCache = function() {
      var cont, _i, _len, _ref, _results;
      _ref = this.manager.controllers;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        cont = _ref[_i];
        _results.push(typeof cont.clearCache === "function" ? cont.clearCache() : void 0);
      }
      return _results;
    };

    StockPage.prototype.setStock = function(stock) {
      if (stock && stock !== this.stockID) {
        this.stockID = stock;
        Phoniex.Cache.clear(this.cacheKey);
        this.clearAllCache();
        return true;
      } else {
        return false;
      }
    };

    StockPage.prototype.deFetchStock = function(e) {
      var value;
      e.preventDefault();
      value = this.searchText.val().slice(0, 6);
      if (!App.Util.isValidStockID(value)) {
        return false;
      }
      if (this.setStock(value)) {
        this.refreshPage();
      }
      return false;
    };

    return StockPage;

  })(Phoniex.HeaderLeftAccordionMenuPage);

  App["StockPage"] = StockPage;

}).call(this);
