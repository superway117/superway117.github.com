// Generated by CoffeeScript 1.4.0
(function() {
  var $, Util;

  $ = Spine.$;

  Util = (function() {

    function Util() {}

    Util.isValidStockID = function(stockID) {
      if (stockID.length === 6) {
        if (!isNaN(stockID)) {
          return true;
        }
      } else if (stockID.length === 9) {
        if (stockID.indexOf(".") < 0) {
          return false;
        }
        return true;
      }
      return false;
    };

    Util.openStockInputModal = function(page, callback1, callback2) {
      var modal, text,
        _this = this;
      page.el.append($("#stockInputModalTmpl").tmpl());
      modal = page.$("#stockInputModal");
      text = page.$("#stockInputModal input[type=text]");
      text.typeahead({
        source: function(val, func) {
          var item, list, _i, _len, _results;
          list = Stock.StockDict.query(val);
          _results = [];
          for (_i = 0, _len = list.length; _i < _len; _i++) {
            item = list[_i];
            _results.push(item.join(","));
          }
          return _results;
        },
        matcher: function() {
          return true;
        }
      });
      modal.modal();
      modal.modal('show');
      page.$("#stockInputModal button.btn-primary").click(function() {
        if (text.val()) {
          if (typeof callback1 === "function") {
            callback1(text.val());
          }
          _this.closeStockInputModal(page);
        }
        return false;
      });
      return page.$("#stockInputModal button").click(function() {
        if (typeof callback2 === "function") {
          callback2();
        }
        _this.closeStockInputModal(page);
        return false;
      });
    };

    Util.closeStockInputModal = function(page) {
      var modal;
      modal = page.$("#stockInputModal");
      modal.modal('hide');
      return modal.remove();
    };

    return Util;

  })();

  App["Util"] = Util;

}).call(this);
