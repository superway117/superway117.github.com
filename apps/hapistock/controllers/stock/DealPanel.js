// Generated by CoffeeScript 1.4.0
(function() {
  var $, DealPanel,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __slice = [].slice;

  $ = Spine.$;

  DealPanel = (function(_super) {

    __extends(DealPanel, _super);

    DealPanel.prototype.menuItem = {
      menuGroupID: "stockRealTimeGroupID",
      name: "deal",
      text: "成交明细"
    };

    DealPanel.prototype.elements = {
      'table tbody': 'table'
    };

    DealPanel.prototype.cacheKey = "deal";

    DealPanel.prototype.cacheExpiredTime = 60000;

    DealPanel.prototype.refreshTimer = null;

    function DealPanel() {
      this.fetchDealFinished = __bind(this.fetchDealFinished, this);
      DealPanel.__super__.constructor.apply(this, arguments);
      this.ystock = new App.YahooStock();
      this.ystock.bind("fetchDealFinished", this.fetchDealFinished);
      this.bind("refresh", this.fetchData);
    }

    DealPanel.prototype.loadFromTemplate = function() {
      DealPanel.__super__.loadFromTemplate.apply(this, arguments);
      return this.append(window.Tmpls.stockDeal());
    };

    DealPanel.prototype.activate = function() {
      var args;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      DealPanel.__super__.activate.apply(this, arguments);
      return this.startRefreshTimer();
    };

    DealPanel.prototype.deactivate = function() {
      DealPanel.__super__.deactivate.apply(this, arguments);
      return this.clearRefreshTimer();
    };

    DealPanel.prototype.startRefreshTimer = function() {
      if (this.isActive()) {
        if (!this.refreshTimer) {
          console.log("DealPanel startRefreshTimer");
          this.refreshTimer = this.delay(this.refreshTimerCB, this.cacheExpiredTime);
          return this.refresh();
        }
      }
    };

    DealPanel.prototype.refreshTimerCB = function() {
      if (this.isActive()) {
        console.log("DealPanel refreshTimerCB");
        this.refreshTimer = this.delay(this.startRefreshTimer, this.cacheExpiredTime);
        return this.refresh();
      }
    };

    DealPanel.prototype.clearRefreshTimer = function() {
      if (this.refreshTimer) {
        clearTimeout(this.refreshTimer);
      }
      return this.refreshTimer = null;
    };

    DealPanel.prototype.fetchData = function() {
      if (Phoniex.Cache.get(this.cacheKey)) {
        return this.render();
      } else {
        this.table.empty();
        Phoniex.Util.appendLoadingBar(this.el);
        return this.ystock.fetchDeal(this.stack.stockID);
      }
    };

    DealPanel.prototype.fetchDealFinished = function(result) {
      Phoniex.Util.removeLoadingBar(this.el);
      if (result.status === "fail") {
        return;
      }
      Phoniex.Cache.set(this.cacheKey, result, this.cacheExpiredTime);
      return this.render();
    };

    DealPanel.prototype.render = function(data) {
      this.table.empty();
      if (data == null) {
        data = Phoniex.Cache.get(this.cacheKey);
      }
      data["color"] = function() {
        if (this.type === "卖盘") {
          return "#468847";
        } else {
          return "#FF0000";
        }
      };
      return this.table.append(window.Tmpls.stockDealItem(data));
    };

    DealPanel.prototype.clearCache = function() {
      return Phoniex.Cache.clear(this.cacheKey);
    };

    return DealPanel;

  })(Phoniex.Panel);

  App["DealPanel"] = DealPanel;

}).call(this);
